{"ast":null,"code":"import { Loader } from '@googlemaps/js-api-loader';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      googleApiKey: 'AIzaSyB41Bg4t97fmYwKs3MEL9DmicL53xQKpAY',\n      weatherApiKey: '6d78fcf2b6ddf4f00ae680a37639b3d6',\n      latlng: {\n        lat: 40.76575889443308,\n        lng: -111.89062013069112\n      },\n      mapLoader: null,\n      map: null,\n      marker: null\n    };\n  },\n\n  mounted() {\n    this.mapLoader = new Loader({\n      apiKey: this.googleApiKey,\n      version: \"weekly\",\n      libraries: [\"places\"]\n    }).load().catch(err => {\n      console.warn('Err loading map: ', err);\n    }).finally(() => {\n      this.loadGoogleMap();\n    });\n  },\n\n  methods: {\n    loadGoogleMap() {\n      this.map = new google.maps.Map(document.getElementById(\"google-map\"), {\n        center: this.latlng,\n        zoom: 10,\n        gestureHandling: 'none'\n      });\n      this.setMarker(this.latlng);\n      google.maps.event.addListener(this.map, \"click\", e => {\n        this.latlng = {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        };\n        this.setMarker(e.latLng);\n        this.map.setCenter(this.latlng);\n      });\n    },\n\n    setMarker(location) {\n      if (this.marker) {\n        this.marker.setPosition(location);\n      } else {\n        this.marker = new google.maps.Marker({\n          position: location,\n          map: this.map,\n          draggable: true\n        });\n        google.maps.event.addListener(this.marker, 'dragend', data => {\n          this.latlng = {\n            lat: this.marker.getPosition().lat(),\n            lng: this.marker.getPosition().lng()\n          };\n          this.map.setCenter(this.latlng);\n        });\n      }\n\n      this.getWeatherData();\n    },\n\n    getWeatherData() {\n      axios.get(`api.openweathermap.org/data/2.5/weather?lat=${this.latlng.lat}&lon==${this.latlng.lng}&appid=${this.weatherApiKey}`).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.warn('Error fetching weather data: ', err);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["Loader","axios","data","googleApiKey","weatherApiKey","latlng","lat","lng","mapLoader","map","marker","mounted","apiKey","version","libraries","load","catch","err","console","warn","finally","loadGoogleMap","methods","google","maps","Map","document","getElementById","center","zoom","gestureHandling","setMarker","event","addListener","e","latLng","setCenter","location","setPosition","Marker","position","draggable","getPosition","getWeatherData","get","then","res","log"],"sourceRoot":"","sources":["/Users/taylorlaing/Desktop/Laing Development/GitHub/weather-locator/src/components/MapLocator.vue"],"sourcesContent":["<template>\n    <div class=\"google-map-wrapper\">\n        <div id=\"google-map\">\n        content\n        </div>\n    </div>\n</template>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\nimport axios from 'axios';\n\nexport default {\n  data() {\n      return {\n          googleApiKey: 'AIzaSyB41Bg4t97fmYwKs3MEL9DmicL53xQKpAY',\n          weatherApiKey: '6d78fcf2b6ddf4f00ae680a37639b3d6',\n          latlng: {\n            lat: 40.76575889443308,\n            lng: -111.89062013069112\n          },\n          mapLoader: null,\n          map: null,\n          marker: null\n      }\n  },\n\n  mounted() {\n    this.mapLoader = new Loader({\n        apiKey: this.googleApiKey,\n        version: \"weekly\",\n        libraries: [\"places\"]\n    }).load()\n    .catch(err => {\n        console.warn('Err loading map: ', err)\n    })\n    .finally(() => {\n        this.loadGoogleMap();\n    });\n  },\n\n  methods: {\n    loadGoogleMap() {\n        this.map = new google.maps.Map(document.getElementById(\"google-map\"), {\n              center: this.latlng,\n              zoom: 10,\n              gestureHandling: 'none'\n        });\n        this.setMarker(this.latlng);\n        google.maps.event.addListener(this.map, \"click\", (e) => {\n            this.latlng = {\n                lat: e.latLng.lat(),\n                lng: e.latLng.lng()\n            }\n            this.setMarker(e.latLng);\n            this.map.setCenter(this.latlng);\n        });\n    },\n    setMarker(location) {\n        if (this.marker) {\n            this.marker.setPosition(location);\n        } else {\n             this.marker = new google.maps.Marker({\n                position: location,\n                map: this.map,\n                draggable: true\n            });\n            google.maps.event.addListener(this.marker, 'dragend', data => { \n                this.latlng = {\n                    lat: this.marker.getPosition().lat(),\n                    lng: this.marker.getPosition().lng()\n                }\n                this.map.setCenter(this.latlng);\n            });\n        }\n        \n        this.getWeatherData()\n    },\n    getWeatherData() {\n        axios.get(`api.openweathermap.org/data/2.5/weather?lat=${this.latlng.lat}&lon==${this.latlng.lng}&appid=${this.weatherApiKey}`)\n        .then(res => {\n            console.log(res);\n        }).catch(err => {\n            console.warn('Error fetching weather data: ', err);\n        })\n    }\n  }\n}\n</script>\n\n<style type=\"text/scss\">\n#google-map {\nheight: 1000px;\nwidth: 1000px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}