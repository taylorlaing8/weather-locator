{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"row text-center align-items-center\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-md-7 order-md-1 col-12 order-2\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"google-map\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"col col-md-5 order-md-2 col-12 order-1\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row justify-content-center p-3\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-10\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Weather Discovery Map\"), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"small\"\n}, \" Select a point on the map, or drag marker to a new position, to find real-time data on the local weather \")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-md-5 col-6 my-2\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", null, \"Loading Weather Data\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  class: \"col col-md-5 col-6 my-2\"\n};\nconst _hoisted_9 = {\n  class: \"badge badge-primary w-100 px-3 py-2\"\n};\nconst _hoisted_10 = {\n  class: \"col col-md-7 col-6 my-2 weather-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, $data.weather || $data.loading ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.weather, (item, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row justify-content-center mx-3\",\n      key: key\n    }, _hoisted_7);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.weather, (item, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row justify-content-center mx-3\",\n      key: key\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(key), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(item), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gCACTC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAAmD,cACjDC,oBAA2B,KAA3B,EAA2B;AAAtBC,IAAE,EAAC;AAAmB,CAA3B,CADiD,CAAnD;;AAAA;;;AAGKF,OAAK,EAAC;;;gCACTC,oBAQM,KARN,EAQM;AARDD,OAAK,EAAC;AAQL,CARN,EAA2C,cACzCC,oBAMM,KANN,EAMM;AANDD,OAAK,EAAC;AAML,CANN,EAAuB,cACrBC,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,CADqB,eAErBA,oBAGI,GAHJ,EAGI;AAHDD,OAAK,EAAC;AAGL,CAHJ,EAAiB,4GAAjB,CAFqB,CAAvB,CADyC,CAA3C;;AAAA;;gCAWIC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAAoC,cAClCC,oBAA6B,IAA7B,EAA6B,IAA7B,EAAI,sBAAJ,CADkC,CAApC;;AAAA;;oBAAAE;;AAOKH,OAAK,EAAC;;;AACHA,OAAK,EAAC;;;AAETA,OAAK,EAAC;;;uBA3BrBI,oBAkCM,KAlCN,cAkCM,CAjCJH,oBAgCM,KAhCN,cAgCM,CA/BJI,UA+BI,EA5BJJ,oBA2BM,KA3BN,cA2BM,CA1BJK,UA0BI,EAjBYC,iBAAWA,mCACzBH,oBAIMI,SAJN,EAIM;AAAAC;AAAA,GAJN,EAIMC,YAJ6DH,aAI7D,EAJoE,CAArBI,IAAqB,EAAfF,GAAe,KAAZ;yBAA9DL,oBAIM,KAJN,EAIM;AAJDJ,WAAK,EAAC,iCAIL;AAJuES,SAAG,EAAEA;AAI5E,KAJN;GAIM,CAJN;;AAAA,0BAOAL,oBAOMI,SAPN,EAOM;AAAAC;AAAA,GAPN,EAOMC,YAP6DH,aAO7D,EAPoE,CAArBI,IAAqB,EAAfF,GAAe,KAAZ;yBAA9DL,oBAOM,KAPN,EAOM;AAPDJ,WAAK,EAAC,iCAOL;AAPuES,SAAG,EAAEA;AAO5E,KAPN,GACER,oBAEM,KAFN,cAEM,CADJA,oBAAkE,MAAlE,cAAkEW,iBAAbH,GAAa,CAAlE,EAAwD;AAAA;AAAxD,KACI,CAFN,GAGAR,oBAEM,KAFN,eAEMW,iBADDD,IACC,CAFN,EACS;AAAA;AADT,MAJF;GAOM,CAPN;;AAAA,IASE,CA3BN,CA4BI,CAhCN,CAiCI,CAlCN","names":["class","_createElementVNode","id","_hoisted_6","_createElementBlock","_hoisted_3","_hoisted_5","$data","_Fragment","key","_renderList","item","_toDisplayString"],"sourceRoot":"","sources":["/Users/taylorlaing/Desktop/Laing Development/GitHub/weather-locator/src/components/MapLocator.vue"],"sourcesContent":["<template>\n  <div class=\"content-wrapper\">\n    <div class=\"row text-center align-items-center\">\n      <div class=\"col col-md-7 order-md-1 col-12 order-2\">\n        <div id=\"google-map\"></div>\n      </div>\n      <div class=\"col col-md-5 order-md-2 col-12 order-1\">\n        <div class=\"row justify-content-center p-3\">\n          <div class=\"col col-10\">\n            <h2>Weather Discovery Map</h2>\n            <p class=\"small\">\n              Select a point on the map, or drag marker to a new position, to\n              find real-time data on the local weather\n            </p>\n          </div>\n        </div>\n        <template v-if=\"weather || loading\">\n          <div class=\"row justify-content-center mx-3\" v-for=\"(item, key) of weather\" :key=\"key\">\n            <div class=\"col col-md-5 col-6 my-2\">\n              <h5>Loading Weather Data</h5>\n            </div>\n          </div>\n        </template>\n        <template v-else>\n          <div class=\"row justify-content-center mx-3\" v-for=\"(item, key) of weather\" :key=\"key\">\n            <div class=\"col col-md-5 col-6 my-2\">\n              <span class=\"badge badge-primary w-100 px-3 py-2\">{{ key }}</span>\n            </div>\n            <div class=\"col col-md-7 col-6 my-2 weather-data\">\n              {{ item }}\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      googleApiKey: \"AIzaSyB41Bg4t97fmYwKs3MEL9DmicL53xQKpAY\",\n      weatherApiKey: \"6d78fcf2b6ddf4f00ae680a37639b3d6\",\n      latlng: {\n        lat: 40.76575889443308,\n        lng: -111.89062013069112,\n      },\n      map: null,\n      marker: null,\n      loading: false,\n      weather: null,\n    };\n  },\n\n  mounted() {\n    this.loading = true;\n    var mapLoader = new Loader({\n      apiKey: this.googleApiKey,\n      version: \"weekly\",\n      libraries: [\"places\"],\n    })\n      .load()\n      .catch((err) => {\n        console.warn(\"Err loading map: \", err);\n      })\n      .finally(() => {\n        this.loadGoogleMap();\n      });\n  },\n\n  methods: {\n    loadGoogleMap() {\n      this.map = new google.maps.Map(document.getElementById(\"google-map\"), {\n        center: this.latlng,\n        zoom: 10,\n        gestureHandling: \"none\",\n      });\n      this.setMarker(this.latlng);\n      google.maps.event.addListener(this.map, \"click\", (e) => {\n        this.latlng = {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng(),\n        };\n        this.setMarker(e.latLng);\n        this.map.setCenter(this.latlng);\n      });\n    },\n    setMarker(location) {\n      if (this.marker) {\n        this.marker.setPosition(location);\n      } else {\n        this.marker = new google.maps.Marker({\n          position: location,\n          map: this.map,\n          draggable: true,\n        });\n        google.maps.event.addListener(this.marker, \"dragend\", (data) => {\n          this.latlng = {\n            lat: this.marker.getPosition().lat(),\n            lng: this.marker.getPosition().lng(),\n          };\n          this.map.setCenter(this.latlng);\n          this.getWeatherData();\n        });\n      }\n\n      this.getWeatherData();\n    },\n    getWeatherData() {\n      axios\n        .get(\n          `http://api.openweathermap.org/data/2.5/weather?lat=${this.latlng.lat}&lon=${this.latlng.lng}&units=imperial&appid=${this.weatherApiKey}`\n        )\n        .then((res) => {\n          this.weather = {\n            Location: res.data.name,\n            Condition: res.data.weather[0].main,\n            Temperature: `${res.data.main.temp} F`,\n            Humidity: `${res.data.main.humidity}%`,\n            Sunrise: this.toDateString(res.data.sys.sunrise),\n            Sunset: this.toDateString(res.data.sys.sunset),\n            \"Wind Speed\": `${res.data.wind.speed} mph`,\n            \"Wind Direction\": `${res.data.wind.deg} degrees`,\n          };\n        })\n        .catch((err) => {\n          console.warn(\"Error fetching weather data: \", err);\n        });\n    },\n    toDateString(unixString) {\n      return new Date(unixString * 1000).toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        timeZone: \"America/Denver\",\n        timeZoneName: \"short\",\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.content-wrapper {\n  font-size: 20px;\n\n  & .weather-data {\n    text-align: left;\n    background-color: #00000008;\n    border-radius: 0.25rem;\n  }\n}\n\n#google-map {\n  height: 100vh;\n  width: 58.333vw;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}