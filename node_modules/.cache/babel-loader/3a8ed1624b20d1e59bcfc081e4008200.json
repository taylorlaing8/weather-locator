{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"row text-center align-items-center\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-md-7 col-12\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"google-map\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"col col-md-5 col-12\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row text-center p-5\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-10\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Weather Discovery Map\"), /*#__PURE__*/_createElementVNode(\"p\", null, \" Select a point on the map, or drag marker to a new position, to find real-time data on the local weather \")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"col col-5 my-2\"\n};\nconst _hoisted_7 = {\n  class: \"badge badge-primary w-100 px-3 py-2\"\n};\nconst _hoisted_8 = {\n  class: \"col col-7 my-2 text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.weather, (item, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row px-5\",\n      key: key\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString(key), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAAgC,cAC5BC,oBAA2B,KAA3B,EAA2B;AAAtBC,IAAE,EAAC;AAAmB,CAA3B,CAD4B,CAAhC;;AAAA;;;AAGKF,OAAK,EAAC;;;gCACPC,oBAOM,KAPN,EAOM;AAPDD,OAAK,EAAC;AAOL,CAPN,EAAgC,cAC5BC,oBAKM,KALN,EAKM;AALDD,OAAK,EAAC;AAKL,CALN,EAAuB,cACnBC,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,CADmB,eAEnBA,oBAEI,GAFJ,EAEI,IAFJ,EAAG,4GAAH,CAFmB,CAAvB,CAD4B,CAAhC;;AAAA;;;AASSD,OAAK,EAAC;;;AACDA,OAAK,EAAC;;;AAEXA,OAAK,EAAC;;;uBAlB3BG,oBAwBM,KAxBN,cAwBM,CAvBFF,oBAsBM,KAtBN,cAsBM,CArBFG,UAqBE,EAlBFH,oBAiBM,KAjBN,cAiBM,CAhBFI,UAgBE,qBARFF,oBAOMG,SAPN,EAOM,IAPN,EAOMC,YAPsCC,aAOtC,EAP6C,CAArBC,IAAqB,EAAfC,GAAe,KAAZ;yBAAvCP,oBAOM,KAPN,EAOM;AAPDH,WAAK,EAAC,UAOL;AAPgDU,SAAG,EAAEA;AAOrD,KAPN,GACIT,oBAEM,KAFN,cAEM,CADFA,oBAAgE,MAAhE,cAAgEU,iBAAZD,GAAY,CAAhE,EAAuD;AAAA;AAAvD,KACE,CAFN,GAGAT,oBAEM,KAFN,cAEMU,iBADAF,IACA,CAFN,EACU;AAAA;AADV,MAJJ;GAOM,CAPN;;AAAA,GAQE,EAjBN,CAkBE,CAtBN,CAuBE,CAxBN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_3","_hoisted_5","_Fragment","_renderList","$data","item","key","_toDisplayString"],"sourceRoot":"","sources":["/Users/taylorlaing/Desktop/Laing Development/GitHub/weather-locator/src/components/MapLocator.vue"],"sourcesContent":["<template>\n    <div class=\"content-wrapper\">\n        <div class=\"row text-center align-items-center\">\n            <div class=\"col col-md-7 col-12\">\n                <div id=\"google-map\"></div>\n            </div>\n            <div class=\"col col-md-5 col-12\">\n                <div class=\"row text-center p-5\">\n                    <div class=\"col col-10\">\n                        <h1>Weather Discovery Map</h1>\n                        <p>\n                            Select a point on the map, or drag marker to a new position, to find real-time data on the local weather\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row px-5\" v-for=\"(item, key) of weather\" :key=\"key\">\n                    <div class=\"col col-5 my-2\">\n                        <span class=\"badge badge-primary w-100 px-3 py-2\">{{key}}</span>\n                    </div>\n                    <div class=\"col col-7 my-2 text-left\">\n                        {{item}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\nimport axios from 'axios';\n\nexport default {\n  data() {\n      return {\n          googleApiKey: 'AIzaSyB41Bg4t97fmYwKs3MEL9DmicL53xQKpAY',\n          weatherApiKey: '6d78fcf2b6ddf4f00ae680a37639b3d6',\n          latlng: {\n            lat: 40.76575889443308,\n            lng: -111.89062013069112\n          },\n          map: null,\n          marker: null,\n          weather: null\n      }\n  },\n\n  mounted() {\n    var mapLoader = new Loader({\n        apiKey: this.googleApiKey,\n        version: \"weekly\",\n        libraries: [\"places\"]\n    }).load()\n    .catch(err => {\n        console.warn('Err loading map: ', err)\n    })\n    .finally(() => {\n        this.loadGoogleMap();\n    });\n  },\n\n  methods: {\n    loadGoogleMap() {\n        this.map = new google.maps.Map(document.getElementById(\"google-map\"), {\n              center: this.latlng,\n              zoom: 10,\n              gestureHandling: 'none'\n        });\n        this.setMarker(this.latlng);\n        google.maps.event.addListener(this.map, \"click\", (e) => {\n            this.latlng = {\n                lat: e.latLng.lat(),\n                lng: e.latLng.lng()\n            }\n            this.setMarker(e.latLng);\n            this.map.setCenter(this.latlng);\n        });\n    },\n    setMarker(location) {\n        if (this.marker) {\n            this.marker.setPosition(location);\n        } else {\n             this.marker = new google.maps.Marker({\n                position: location,\n                map: this.map,\n                draggable: true\n            });\n            google.maps.event.addListener(this.marker, 'dragend', data => { \n                this.latlng = {\n                    lat: this.marker.getPosition().lat(),\n                    lng: this.marker.getPosition().lng()\n                }\n                this.map.setCenter(this.latlng);\n                this.getWeatherData()\n            });\n        }\n        \n        this.getWeatherData()\n    },\n    getWeatherData() {\n        axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.latlng.lat}&lon=${this.latlng.lng}&units=imperial&appid=${this.weatherApiKey}`)\n        .then(res => {\n            this.weather = {\n                'Location': res.data.name,\n                'Condition': res.data.weather[0].main,\n                'Temperature': `${res.data.main.temp} F`,\n                'Humidity': `${res.data.main.humidity}%`,\n                'Sunrise': this.toDateString(res.data.sys.sunrise),\n                'Sunset': this.toDateString(res.data.sys.sunset),\n                'Wind Speed': `${res.data.wind.speed} mph`,\n                'Wind Direction': `${res.data.wind.deg} degrees`\n            }\n        }).catch(err => {\n            console.warn('Error fetching weather data: ', err);\n        })\n    },\n    toDateString(unixString) {\n        return new Date(unixString * 1000).toLocaleString(\"en-US\", {hour: \"numeric\", minute: \"numeric\", timeZone: 'America/Denver', timeZoneName: \"short\"});\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.content-wrapper {\n    font-size: 20px;\n}\n\n#google-map {\n    height: 100vh;\n    width: 58.333vw;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}