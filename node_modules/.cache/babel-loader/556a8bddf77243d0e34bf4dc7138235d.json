{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col col-6\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"google-map\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"col col-6\"\n};\nconst _hoisted_5 = {\n  class: \"table mt-5\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Location\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_createElementVNode(\"tr\", null, [_hoisted_6, _createElementVNode(\"td\", null, _toDisplayString($data.weather), 1\n  /* TEXT */\n  )])])])])]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAAsB,cAClBC,oBAA2B,KAA3B,EAA2B;AAAtBC,IAAE,EAAC;AAAmB,CAA3B,CADkB,CAAtB;;AAAA;;;AAGKF,OAAK,EAAC;;;AACAA,OAAK,EAAC;;;gCAELC,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;uBARpBE,oBAcM,KAdN,cAcM,CAbFF,oBAYM,KAZN,cAYM,CAXFG,UAWE,EARFH,oBAOM,KAPN,cAOM,CANFA,oBAKQ,OALR,cAKQ,CAJJA,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFDI,UAEC,EADDJ,oBAAoB,IAApB,EAAoB,IAApB,EAAoBK,iBAAdC,aAAc,CAApB,EAAa;AAAA;AAAb,GACC,CAHL,CAII,CALR,CAME,CAPN,CAQE,CAZN,CAaE,CAdN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_3","_hoisted_6","_toDisplayString","$data"],"sourceRoot":"","sources":["/Users/taylorlaing/Desktop/Laing Development/GitHub/weather-locator/src/components/MapLocator.vue"],"sourcesContent":["<template>\n    <div class=\"content-wrapper\">\n        <div class=\"row\">\n            <div class=\"col col-6\">\n                <div id=\"google-map\"></div>\n            </div>\n            <div class=\"col col-6\">\n                <table class=\"table mt-5\">\n                    <tr>\n                        <td>Location</td>\n                        <td>{{weather}}</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { Loader } from '@googlemaps/js-api-loader';\nimport axios from 'axios';\n\nexport default {\n  data() {\n      return {\n          googleApiKey: 'AIzaSyB41Bg4t97fmYwKs3MEL9DmicL53xQKpAY',\n          weatherApiKey: '6d78fcf2b6ddf4f00ae680a37639b3d6',\n          latlng: {\n            lat: 40.76575889443308,\n            lng: -111.89062013069112\n          },\n          map: null,\n          marker: null,\n          weather: null\n      }\n  },\n\n  mounted() {\n    var mapLoader = new Loader({\n        apiKey: this.googleApiKey,\n        version: \"weekly\",\n        libraries: [\"places\"]\n    }).load()\n    .catch(err => {\n        console.warn('Err loading map: ', err)\n    })\n    .finally(() => {\n        this.loadGoogleMap();\n    });\n  },\n\n  methods: {\n    loadGoogleMap() {\n        this.map = new google.maps.Map(document.getElementById(\"google-map\"), {\n              center: this.latlng,\n              zoom: 10,\n              gestureHandling: 'none'\n        });\n        this.setMarker(this.latlng);\n        google.maps.event.addListener(this.map, \"click\", (e) => {\n            this.latlng = {\n                lat: e.latLng.lat(),\n                lng: e.latLng.lng()\n            }\n            this.setMarker(e.latLng);\n            this.map.setCenter(this.latlng);\n        });\n    },\n    setMarker(location) {\n        if (this.marker) {\n            this.marker.setPosition(location);\n        } else {\n             this.marker = new google.maps.Marker({\n                position: location,\n                map: this.map,\n                draggable: true\n            });\n            google.maps.event.addListener(this.marker, 'dragend', data => { \n                this.latlng = {\n                    lat: this.marker.getPosition().lat(),\n                    lng: this.marker.getPosition().lng()\n                }\n                this.map.setCenter(this.latlng);\n            });\n        }\n\n        this.getWeatherData()\n    },\n    getWeatherData() {\n        axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.latlng.lat}&lon=${this.latlng.lng}&appid=${this.weatherApiKey}`)\n        .then(res => {\n            this.weather = res.data\n        }).catch(err => {\n            console.warn('Error fetching weather data: ', err);\n        })\n    }\n  }\n}\n</script>\n\n<style type=\"text/scss\">\n#google-map {\n    height: 800px;\n    width: 800px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}